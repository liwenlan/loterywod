# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'AthleteConfirmMainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
import ui
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QMovie
from LoteryWod import *
from input import *
from Card import *

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_AthleteConfirmMainWindow(QtWidgets.QMainWindow):
    switch_window_rules = QtCore.pyqtSignal()
    switch_window_groupSplit = QtCore.pyqtSignal(object, object, object)

    def __init__(self, team):
        super(Ui_AthleteConfirmMainWindow, self).__init__()
        self.teamConfirm = team
        self.teamAthleteList = []
        self.group = 0
        self.setupUi(self)
        self.retranslateUi(self)
        self.athleteNum = 0
        self.tempAthleteNumstring = ''

    def setupUi(self, AthleteConfirmMainWindow):
        AthleteConfirmMainWindow.setObjectName("AthleteConfirmMainWindow")
        AthleteConfirmMainWindow.resize(844, 567)
        self.centralwidgetWhole = QtWidgets.QWidget(AthleteConfirmMainWindow)
        self.centralwidgetWhole.setObjectName("centralwidgetWhole")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidgetWhole)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayoutWhole = QtWidgets.QGridLayout()
        self.gridLayoutWhole.setObjectName("gridLayoutWhole")
        self.pushButtonConfirm = QtWidgets.QPushButton(self.centralwidgetWhole)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonConfirm.sizePolicy().hasHeightForWidth())
        self.pushButtonConfirm.setSizePolicy(sizePolicy)
        self.pushButtonConfirm.setMinimumSize(QtCore.QSize(200, 50))
        self.pushButtonConfirm.setMaximumSize(QtCore.QSize(400, 100))
        font = QtGui.QFont()
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        self.pushButtonConfirm.setFont(font)
        self.pushButtonConfirm.setObjectName("pushButtonConfirm")
        self.gridLayoutWhole.addWidget(self.pushButtonConfirm, 2, 1, 1, 1)
        self.pushButtonRules = QtWidgets.QPushButton(self.centralwidgetWhole)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonRules.sizePolicy().hasHeightForWidth())
        self.pushButtonRules.setSizePolicy(sizePolicy)
        self.pushButtonRules.setMinimumSize(QtCore.QSize(80, 40))
        self.pushButtonRules.setMaximumSize(QtCore.QSize(120, 60))
        self.pushButtonRules.setObjectName("pushButtonRules")
        self.gridLayoutWhole.addWidget(self.pushButtonRules, 0, 2, 1, 1)
        self.lineEditAthleteNumber = QtWidgets.QLineEdit(self.centralwidgetWhole)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEditAthleteNumber.sizePolicy().hasHeightForWidth())
        self.lineEditAthleteNumber.setSizePolicy(sizePolicy)
        self.lineEditAthleteNumber.setMinimumSize(QtCore.QSize(200, 50))
        self.lineEditAthleteNumber.setMaximumSize(QtCore.QSize(400, 100))
        font = QtGui.QFont()
        font.setPointSize(19)
        self.lineEditAthleteNumber.setFont(font)
        self.lineEditAthleteNumber.setObjectName("lineEditAthleteNumber")
        self.gridLayoutWhole.addWidget(self.lineEditAthleteNumber, 2, 0, 1, 1)
        self.labelPicture = QtWidgets.QLabel(self.centralwidgetWhole)
        self.labelPicture.setMinimumSize(QtCore.QSize(400, 300))
        self.labelPicture.setMaximumSize(QtCore.QSize(800, 600))
        self.labelPicture.setObjectName("labelPicture")
        self.gridLayoutWhole.addWidget(self.labelPicture, 1, 0, 1, 2)
        self.gridLayout_2.addLayout(self.gridLayoutWhole, 0, 0, 1, 1)
        AthleteConfirmMainWindow.setCentralWidget(self.centralwidgetWhole)
        self.pushButtonConfirm.clicked.connect(self.goGroupSplit)
        self.pushButtonRules.clicked.connect(self.goRules)

        self.retranslateUi(AthleteConfirmMainWindow)
        QtCore.QMetaObject.connectSlotsByName(AthleteConfirmMainWindow)

    def retranslateUi(self, AthleteConfirmMainWindow):
        _translate = QtCore.QCoreApplication.translate
        AthleteConfirmMainWindow.setWindowTitle(_translate("AthleteConfirmMainWindow", "MainWindow"))
        self.pushButtonConfirm.setText(_translate("AthleteConfirmMainWindow", "确认"))
        self.pushButtonRules.setText(_translate("AthleteConfirmMainWindow", "规则说明"))
        self.lineEditAthleteNumber.setPlaceholderText(_translate("AthleteConfirmMainWindow", "请输入训练的人数"))

        # 设置Gif动画
        self.labelPicture.setScaledContents(True)
        gif = QMovie(":/Resources/lottery.gif")
        self.labelPicture.setMovie(gif)
        gif.start()

    def goRules(self):
        self.switch_window_rules.emit()

    def goGroupSplit(self):
        self.tempAthleteNumstring = self.lineEditAthleteNumber.text()
        if self.tempAthleteNumstring == '':
            QtWidgets.QMessageBox.information(self, '提示', '一个人都没有呢')
        elif int(self.tempAthleteNumstring) <= 0:
            QtWidgets.QMessageBox.information(self, '提示', '可不能没人啊')
        elif int(self.tempAthleteNumstring) > 24:
            QtWidgets.QMessageBox.information(self, '提示', '人太多了，请包包扩容场地')
        else:
            self.confirmGroup()
            print(self.teamAthleteList)
            self.switch_window_groupSplit.emit(self.teamConfirm, self.group, self.teamAthleteList)

    def confirmGroup(self):
        self.athleteNum = int(self.lineEditAthleteNumber.text())
        self.teamAthleteList = setTeamNum(self.athleteNum)
        self.group = setGroupNum(self.athleteNum, self.teamConfirm)
        self.cardUpdateDeckFor4(self.group)

    def cardUpdateDeckFor4(self, group):
        """
        初始分组卡片：红桃A、黑桃A、草花A、方片A
        根据组数删除多余的分组卡牌：
        4组：不删除
        3组：删除方片A
        2组：删除草花A和方片A
        1组：删除黑桃A、草花A、方片A
        :param group:
        :return:
        """

        teamDeckTemp = AthleteDeck()
        teamDeckTemp.init()
        if group == 4:
            pass
        elif group == 3:
            teamDeckTemp.remove('diamond_A')
        elif group == 2:
            teamDeckTemp.remove('diamond_A')
            teamDeckTemp.remove('club_A')
        elif group == 1:
            teamDeckTemp.remove('diamond_A')
            teamDeckTemp.remove('club_A')
            teamDeckTemp.remove('spade_A')


